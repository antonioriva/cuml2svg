diagram uml "visitor_pattern" {
	package visitor{
		class Client{
			relations{
				use Visitor , ObjectStructure;
			}
		}
		class Visitor{
			public VisitConcreteElementA(
				ConcreteElementB
			)
			public VisitConcreteElementB(
				ConcreteElementB
			)
		}
		class ConcreteVisitor1{
			relations{
				extend Visitor;
			}
			public VisitConcreteElementA(
				ConcreteElementA
			)
			public VisitConcreteElementB(
				ConcreteElementB
			)
		}
		class ConcreteVisitor2{
			relations{
				extend Visitor;
			}
			public VisitConcreteElementA(
				ConcreteElementA
			)
			public VisitConcreteElementB(
				ConcreteElementB
			)
		}
		class ObjectStructure{
			relations{
				use Element;
			}
		}
		class Element{
			public Accept(
				Visitor Visitor
			)
		}
		class ConcreteElementA{
			relations{
				extend Element;
			}
			public Accept(
				Visitor Visitor
			)
			public OperationA(
			)
		}
		class ConcreteElementB{
			relations{
				extend Element;
			}
			public Accept(
				Visitor Visitor
			)
			public OperationB(
			)
		}
	}
}