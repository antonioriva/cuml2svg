diagram uml "composite pattern" {
	class Client{
		relations{
			use Component;
		}
	}
	interface Component{
		public operation()
		public add(Component)
		public remove(Component)
		public getChild(int)
	}
	class Leaf{
		relations{
			extend Component;
		}
		public operation()
	}
	class Composite{
		relations{
			extend Component;
		}
		public operation()
		public add(Component)
		public remove(Component)
		public getChild(int)
	}
}