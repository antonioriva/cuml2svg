package visitor{
	class Client{
		relations{
			depend visitor.Visitor("","import","");
			realize visitor.ObjectStructure;
		}
	}
	interface Visitor{
		methods{
			public int VisitConcreteElementA(is ConcreteElementB);
			public VisitConcreteElementB(ConcreteElementB);
		}
	}
	class ConcreteVisitor1{
		relations{
			realize visitor.Visitor;
		}
		methods{
			public VisitConcreteElementA(ConcreteElementA);
			public VisitConcreteElementB(ConcreteElementB);
		}
	}
	class ConcreteVisitor2{
		relations{
			realize visitor.Visitor;
		}
		methods{
			public VisitConcreteElementA(ConcreteElementA);
			public VisitConcreteElementB(ConcreteElementB);
		}
	}
	class ObjectStructure{
		relations{
			depend visitor.Element("","import","");
		}
	}
	class Element{
		methods{
			public Accept(Visitor Visitor);
		}
	}
	class ConcreteElementA{
		relations{
			realize visitor.Element;
		}
		methods{
			public Accept(Visitor Visitor);
			public OperationA();
		}
	}
	class ConcreteElementB{
		
		relations{
			realize visitor.Element;
		}
		methods{
			public Accept(Visitor Visitor);			
			public OperationB();
		}
	}
}
